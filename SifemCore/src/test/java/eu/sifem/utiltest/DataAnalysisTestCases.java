package eu.sifem.utiltest;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import eu.deri.dataanalysis.vo.Feature;


/**
 * 
 * @author yaskha
 *
 */
public class DataAnalysisTestCases {
	
	
	
	/* ******************* Test Cases for Displacement Scenario ******************** */
	
	// Test Case 1 (Real Data)
		public static List<Object> displacementValuesX1 = Arrays
				.asList(new Object[] { "3.499999875202775E-4", "6.99999975040555E-4", "0.0010499999625608325", "0.00139999995008111", "0.0017500000540167093", "0.002099999925121665", "0.0024500000290572643", "0.00279999990016222", "0.0031500000040978193", "0.0035000001080334187", "0.0038499999791383743", "0.00419999985024333", "0.004550000187009573", "0.004900000058114529", "0.005249999929219484", "0.00559999980032444", "0.005950000137090683", "0.006300000008195639", "0.006649999879300594", "0.007000000216066837", "0.007350000087171793", "0.007699999958276749", "0.008050000295042992", "0.00839999970048666", "0.008750000037252903", "0.009100000374019146", "0.009449999779462814", "0.009800000116229057", "0.0101500004529953", "0.010499999858438969", "0.010850000195205212", "0.01119999960064888", "0.011549999937415123", "0.011900000274181366", "0.012249999679625034", "0.012600000016391277", "0.01295000035315752", "0.013299999758601189", "0.013650000095367432", "0.014000000432133675", "0.014349999837577343", "0.014700000174343586", "0.015049999579787254", "0.015399999916553497", "0.01575000025331974", "0.016100000590085983", "0.016450000926852226", "0.01679999940097332", "0.017149999737739563", "0.017500000074505806", "0.01785000041127205", "0.018200000748038292", "0.018549999222159386", "0.01889999955892563", "0.01924999989569187", "0.019600000232458115", "0.019950000569224358", "0.0203000009059906", "0.020649999380111694", "0.020999999716877937", "0.02135000005364418", "0.021700000390410423", "0.022050000727176666", "0.02239999920129776", "0.022749999538064003", "0.023099999874830246", "0.02345000021159649", "0.023800000548362732", "0.024150000885128975", "0.02449999935925007", "0.02484999969601631", "0.025200000032782555", "0.025550000369548798", "0.02590000070631504", "0.026249999180436134", "0.026599999517202377", "0.02694999985396862", "0.027300000190734863", "0.027650000527501106", "0.02800000086426735", "0.028349999338388443", "0.028699999675154686", "0.02905000001192093", "0.029400000348687172", "0.029750000685453415", "0.03009999915957451", "0.03044999949634075", "0.030799999833106995", "0.031150000169873238", "0.03150000050663948", "0.031849998980760574", "0.03220000118017197", "0.03254999965429306", "0.03290000185370445", "0.033250000327825546", "0.03359999880194664", "0.03395000100135803", "0.034299999475479126", "0.03465000167489052", "0.03500000014901161" });
		public static List<Object> displacementValuesY1 = Arrays
				.asList(new Object[] { "-1.1335900126141496E-5", "-2.81479992736422E-6", "-2.1090299640036392E-7", "-8.018120070119039E-7", "-1.13827002223843E-6", "-1.1322799764457159E-6", "-1.0813299695655587E-6", "-1.0400999599369243E-6", "-9.838649930316024E-7", "-8.997449754133413E-7", "-7.834950110918726E-7", "-6.301700068434002E-7", "-4.33046011494298E-7", "-1.8425200210003823E-7", "1.251169976512756E-7", "5.051670086686499E-7", "9.673469776316779E-7", "1.52454003909952E-6", "2.1911801013629884E-6", "2.983269951073453E-6", "3.918440143024782E-6", "5.0159101192548405E-6", "6.296319952525664E-6", "7.781480235280469E-6", "9.4939596237964E-6", "1.1456299944256898E-5", "1.3690299965674058E-5", "1.6214900824707E-5", "1.9045099179493263E-5", "2.2188200091477484E-5", "2.5641000320320018E-5", "2.9384000299614854E-5", "3.337550151627511E-5", "3.754290082724765E-5", "4.177189839538187E-5", "4.589280069922097E-5", "4.9663598474580795E-5", "5.274869909044355E-5", "5.46947012480814E-5", "5.490050170919858E-5", "5.2586401579901576E-5", "4.676080061472021E-5", "3.619339986471459E-5", "1.9402699763304554E-5", "-5.321689968695864E-6", "-3.9825899875722826E-5", "-8.586829790147021E-5", "-1.4465099957305938E-4", "-2.1591500262729824E-4", "-2.96270998660475E-4", "-3.7631799932569265E-4", "-4.3621400254778564E-4", "-4.4062899542041123E-4", "-3.3780900412239134E-4", "-7.39363968023099E-5", "3.629059938248247E-4", "8.71840980835259E-4", "0.0011949100298807025", "0.0010070799617096782", "1.9946599786635488E-4", "-8.231030078604817E-4", "-0.001258690026588738", "-6.430490175262094E-4", "4.416519950609654E-4", "8.006020216271281E-4", "1.0627500159898773E-4", "-5.48785028513521E-4", "-2.3142099962569773E-4", "3.655680047813803E-4", "1.9294300000183284E-4", "-2.692860143724829E-4", "-1.0017000022344291E-4", "2.1276299958117306E-4", "4.532999810180627E-6", "-1.4635399566031992E-4", "6.521410250570625E-5", "6.179379852255806E-5", "-7.862850179662928E-5", "1.3176900210964959E-5", "3.8941499951761216E-5", "-3.7447898648679256E-5", "7.882300451456103E-6", "1.4364200069394428E-5", "-1.6889700418687426E-5", "7.968040335981641E-6", "1.035979948937893E-6", "-4.80898006571806E-6", "4.207509846310131E-6", "-2.001770099013811E-6", "2.1336799704840814E-7", "5.957489861430076E-7", "-6.666539889010892E-7", "4.427469946222118E-7", "-2.0115500376505224E-7", "5.173010109160714E-8", "1.3835699697040127E-8", "-2.7390800738658072E-8", "2.193950088269503E-8", "-1.1354599926960418E-8", "0.0" });

		
	// Test Case 2
	   public static List<Object> displacementValuesX2 = Arrays.
			   asList(new Object[] { "3.50E-04", "7.00E-04", "0.00105", "0.0014", "0.00175", "0.0021", "0.00245", "0.0028", "0.00315", "0.0035", "0.00385", "0.0042", "0.00455", "0.0049", "0.00525", "0.0056", "0.00595", "0.0063", "0.00665", "0.007", "0.00735", "0.0077", "0.00805", "0.0084", "0.00875", "0.0091", "0.00945", "0.0098", "0.01015", "0.0105", "0.01085", "0.0112", "0.01155", "0.0119", "0.01225", "0.0126", "0.01295", "0.0133", "0.01365", "0.014", "0.01435", "0.0147", "0.01505", "0.0154", "0.01575", "0.0161", "0.01645", "0.0168", "0.01715", "0.0175", "0.01785", "0.0182", "0.01855", "0.0189", "0.01925", "0.0196", "0.01995", "0.0203", "0.02065", "0.021", "0.02135", "0.0217", "0.02205", "0.0224", "0.02275", "0.0231", "0.02345", "0.0238", "0.02415", "0.0245", "0.02485", "0.0252", "0.02555", "0.0259", "0.02625", "0.0266", "0.02695", "0.0273", "0.02765", "0.028", "0.02835", "0.0287", "0.02905", "0.0294", "0.02975", "0.0301", "0.03045", "0.0308", "0.03115", "0.0315", "0.03185", "0.0322", "0.03255", "0.0329", "0.03325", "0.0336", "0.03395", "0.0343", "0.03465", "0.035" });
	   public static List<Object> displacementValuesY2 = Arrays.
			   asList(new Object[] { "-1.13E-05", "-2.81E-06", "-2.11E-07", "-8.02E-07", "-1.14E-06", "-1.13E-06", "-1.08E-06", "-1.04E-06", "-9.84E-07", "-9.00E-07", "-7.83E-07", "-6.30E-07", "-4.33E-07",  "-1.84E-07", "1.25E-07", "5.05E-07", "9.67E-07", "1.52E-06", "2.19E-06", "2.98E-06", "3.92E-06", "5.02E-06", "6.30E-06", "7.78E-06", "9.49E-06", "1.15E-05", "1.37E-05", "1.62E-05", "1.90E-05", "2.22E-05", "2.56E-05", "2.94E-05", "3.34E-05", "3.75E-05", "4.18E-05", "4.59E-05", "4.97E-05", "5.27E-05", "5.47E-05", "5.49E-05", "5.26E-05", "4.68E-05", "3.62E-05", "1.94E-05", "-5.32E-06", "-3.98E-05", "-8.59E-05", "-1.45E-04", "-2.16E-04", "-2.96E-04", "-3.76E-04", "-4.36E-04", "-4.41E-04", "-3.38E-04", "-7.39E-05", "3.63E-04", "8.72E-04", "0.00119491", "0.00100708", "1.99E-04", "-8.23E-04", "-0.00125869", "-6.43E-04", "4.42E-04", "8.01E-04", "1.06E-04", "-5.49E-04", "-2.31E-04", "3.66E-04", "1.93E-04", "-2.69E-04", "-1.00E-04", "2.13E-04", "4.53E-06", "-1.46E-04", "6.52E-05", "6.18E-05", "-7.86E-05", "1.32E-05", "3.89E-05", "-3.74E-05", "7.88E-06", "1.44E-05", "-1.69E-05", "7.97E-06", "1.04E-06", "-4.81E-06", "4.21E-06", "-2.00E-06", "2.13E-07", "5.96E-07", "-6.67E-07", "4.43E-07", "-2.01E-07", "5.17E-08", "1.38E-08", "-2.74E-08", "2.19E-08", "-1.14E-08", "0" });
			 
	
	// Test Case 3 (Real Data)
	   public static List<Object> displacementValuesX3 = Arrays.
			   asList(new Object[] { "0.0273",  "0.0273",  "0.02765",  "0.02765",  "0.0273",  "0.0273",  "0.02765",  "0.02765",  "0.00735",  "0.00735",  "0.007",  "0.007",  "0.00735",  "0.00735",  "0.007",  "0.007",  "0.00805",  "0.00805",  "0.0077",  "0.0077",  "0.0077",  "0.0077",  "0.00805",  "0.00805",  "0.0315",  "0.0315",  "0.03115",  "0.03115",  "0.03115",  "0.03115",  "0.0315",  "0.0315",  "0.0238",  "0.0238",  "0.02415",  "0.02415",  "0.02415",  "0.02415",  "0.0238",  "0.0238",  "0.01785",  "0.01785",  "0.01785",  "0.0182",  "0.0182",  "0.0182",  "0.0182",  "0.01785",  "0.0098",  "0.0098",  "0.00945",  "0.00945",  "0.0098",  "0.0098",  "0.00945",  "0.00945",  "0.0028",  "0.0028",  "0.00245",  "0.00245",  "0.00245",  "0.00245",  "0.0028",  "0.0028",  "0.0035",  "0.00385",  "0.00385",  "0.0035",  "0.0035",  "0.00385",  "0.00385",  "0.0035",  "0.02765",  "0.02765",  "0.02765",  "0.028",  "0.028",  "0.028",  "0.028",  "0.02765",  "0.0287",  "0.0287",  "0.02905",  "0.02905",  "0.0287",  "0.0287",  "0.02905",  "0.02905",  "0.03115",  "0.03115",  "0.0315",  "0.0315",  "0.0315",  "0.0315",  "0.03115",  "0.03115",  "0.00595",  "0.00595",  "0.0063",  "0.0063",  "0.0063",  "0.0063",  "0.00595",  "0.00595",  "0.0245",  "0.0245",  "0.02415",  "0.02415",  "0.02415",  "0.02415",  "0.0245",  "0.0245",  "0.0238",  "0.02345",  "0.02345",  "0.0238",  "0.0238",  "0.02345",  "0.02345",  "0.0238",  "0.0035",  "0.0035",  "0.00315",  "0.00315",  "0.00315",  "0.00315",  "0.0035",  "0.0035",  "0.01505",  "0.01505",  "0.0154",  "0.0154",  "0.01505",  "0.01505",  "0.0154",  "0.0154",  "0.00455",  "0.00455",  "0.0049",  "0.0049",  "0.00455",  "0.00455",  "0.0049",  "0.0049",  "0.0308",  "0.0308",  "0.03115",  "0.03115",  "0.0308",  "0.0308",  "0.03115",  "0.03115",  "0.0287",  "0.0287",  "0.02835",  "0.02835",  "0.02835",  "0.02835",  "0.0287",  "0.0287",  "0.01855",  "0.01855",  "0.0189",  "0.0189",  "0.01855",  "0.01855",  "0.0189",  "0.0189",  "0.0084",  "0.0084",  "0.00805",  "0.00805",  "0.0084",  "0.0084",  "0.00805",  "0.00805",  "0.0294",  "0.02975",  "0.02975",  "0.02975",  "0.02975",  "0.0294",  "0.0294",  "0.0294",  "0.01155",  "0.01155",  "0.0119",  "0.0119",  "0.01155",  "0.01155",  "0.0119",  "0.0119",  "0.0217",  "0.0217",  "0.02205",  "0.02205",  "0.02205",  "0.02205",  "0.0217",  "0.0217",  "0.02065",  "0.02065",  "0.021",  "0.021",  "0.021",  "0.021",  "0.02065",  "0.02065",  "0.01575",  "0.01575",  "0.0161",  "0.0161",  "0.01575",  "0.01575",  "0.0161",  "0.0161",  "0.02975",  "0.02975",  "0.0294",  "0.0294",  "0.0294",  "0.0294",  "0.02975",  "0.02975",  "0.0252",  "0.02485",  "0.02485",  "0.02485",  "0.02485",  "0.0252",  "0.0252",  "0.0252",  "0.02555",  "0.02555",  "0.0259",  "0.0259",  "0.02555",  "0.02555",  "0.0259",  "0.0259",  "0.0189",  "0.01855",  "0.01855",  "0.0189",  "0.0189",  "0.01855",  "0.01855",  "0.0189",  "0.03045",  "0.03045",  "0.03045",  "0.03045",  "0.0301",  "0.0301",  "0.0301",  "0.0301",  "0.03255",  "0.0322",  "0.0322",  "0.03255",  "0.03255",  "0.0322",  "0.0322",  "0.03255",  "0.0266",  "0.0266",  "0.02625",  "0.02625",  "0.0266",  "0.0266",  "0.02625",  "0.02625",  "0.02695",  "0.02695",  "0.0273",  "0.0273",  "0.02695",  "0.02695",  "0.0273",  "0.0273",  "0.0217",  "0.0217",  "0.02135",  "0.02135",  "0.02135",  "0.0217",  "0.0217",  "0.02135",  "0.0",  "3.5E-4",  "0.0",  "0.0",  "3.5E-4",  "3.5E-4",  "0.0",  "3.5E-4",  "7.0E-4",  "7.0E-4",  "0.00105",  "0.00105",  "0.00105",  "0.00105",  "7.0E-4",  "7.0E-4",  "0.0231",  "0.0231",  "0.02345",  "0.02345",  "0.0231",  "0.0231",  "0.02345",  "0.02345",  "0.0077",  "0.0077",  "0.00805",  "0.00805",  "0.0077",  "0.0077",  "0.00805",  "0.00805",  "0.0168",  "0.01645",  "0.01645",  "0.01645",  "0.01645",  "0.0168",  "0.0168",  "0.0168",  "0.0133",  "0.0133",  "0.01365",  "0.01365",  "0.0133",  "0.0133",  "0.01365",  "0.01365",  "0.00525",  "0.00525",  "0.0049",  "0.0049",  "0.0049",  "0.0049",  "0.00525",  "0.00525",  "0.0056",  "0.0056",  "0.00525",  "0.00525",  "0.0056",  "0.0056",  "0.00525",  "0.00525",  "0.00105",  "0.00105",  "0.00105",  "0.0014",  "0.0014",  "0.0014",  "0.0014",  "0.00105",  "0.03045",  "0.0308",  "0.0308",  "0.0308",  "0.0308",  "0.03045",  "0.03045",  "0.03045",  "0.0028",  "0.0028",  "0.00245",  "0.00245",  "0.0028",  "0.0028",  "0.00245",  "0.00245",  "0.00875",  "0.00875",  "0.0091",  "0.0091",  "0.00875",  "0.00875",  "0.0091",  "0.0091",  "0.0182",  "0.01855",  "0.01855",  "0.0182",  "0.0182",  "0.01855",  "0.01855",  "0.0182",  "0.0112",  "0.0112",  "0.01155",  "0.01155",  "0.0112",  "0.0112",  "0.01155",  "0.01155",  "0.02625",  "0.02625",  "0.0259",  "0.0259",  "0.0259",  "0.0259",  "0.02625",  "0.02625",  "0.01295",  "0.01295",  "0.0133",  "0.0133",  "0.0133",  "0.0133",  "0.01295",  "0.01295",  "0.01715",  "0.01715",  "0.0175",  "0.0175",  "0.01715",  "0.01715",  "0.0175",  "0.0175",  "0.01715",  "0.01715",  "0.0168",  "0.0168",  "0.0168",  "0.0168",  "0.01715",  "0.01715",  "0.01995",  "0.01995",  "0.0196",  "0.0196",  "0.0196",  "0.0196",  "0.01995",  "0.01995",  "0.01015",  "0.01015",  "0.0098",  "0.0098",  "0.01015",  "0.01015",  "0.0098",  "0.0098",  "0.01085",  "0.01085",  "0.0112",  "0.0112",  "0.0112",  "0.0112",  "0.01085",  "0.01085",  "0.01085",  "0.0105",  "0.0105",  "0.01085",  "0.01085",  "0.0105",  "0.0105",  "0.01085",  "0.0266",  "0.0266",  "0.02695",  "0.02695",  "0.02695",  "0.02695",  "0.0266",  "0.0266",  "0.02065",  "0.0203",  "0.0203",  "0.02065",  "0.02065",  "0.0203",  "0.0203",  "0.02065",  "0.03395",  "0.03395",  "0.0336",  "0.0336",  "0.0336",  "0.0336",  "0.03395",  "0.03395",  "0.00665",  "0.00665",  "0.007",  "0.007",  "0.007",  "0.007",  "0.00665",  "0.00665",  "0.0077",  "0.0077",  "0.00735",  "0.00735",  "0.00735",  "0.00735",  "0.0077",  "0.0077",  "0.0063",  "0.0063",  "0.00665",  "0.00665",  "0.00665",  "0.00665",  "0.0063",  "0.0063",  "0.0238",  "0.0238",  "0.02345",  "0.02345",  "0.0238",  "0.0238",  "0.02345",  "0.02345",  "0.0168",  "0.0168",  "0.01645",  "0.01645",  "0.01645",  "0.01645",  "0.0168",  "0.0168",  "0.0028",  "0.0028",  "0.0028",  "0.00315",  "0.00315",  "0.00315",  "0.00315",  "0.0028",  "0.0196",  "0.0196",  "0.01925",  "0.01925",  "0.0196",  "0.0196",  "0.01925",  "0.01925",  "0.0203",  "0.0203",  "0.01995",  "0.01995",  "0.01995",  "0.01995",  "0.0203",  "0.0203",  "0.00595",  "0.00595",  "0.0063",  "0.0063",  "0.00595",  "0.00595",  "0.0063",  "0.0063",  "0.01435",  "0.01435",  "0.014",  "0.014",  "0.01435",  "0.01435",  "0.014",  "0.014",  "0.02905",  "0.0294",  "0.0294",  "0.02905",  "0.02905",  "0.0294",  "0.0294",  "0.02905",  "0.0322",  "0.0322",  "0.03185",  "0.03185",  "0.03185",  "0.03185",  "0.0322",  "0.0322",  "0.00735",  "0.0077",  "0.0077",  "0.00735",  "0.00735",  "0.00735",  "0.0077",  "0.0077",  "0.0084",  "0.0084",  "0.00805",  "0.00805",  "0.0084",  "0.0084",  "0.00805",  "0.00805",  "0.0105",  "0.0105",  "0.01085",  "0.01085",  "0.0105",  "0.0105",  "0.01085",  "0.01085",  "0.02555",  "0.02555",  "0.0252",  "0.0252",  "0.02555",  "0.02555",  "0.0252",  "0.0252",  "0.028",  "0.028",  "0.02765",  "0.02765",  "0.02765",  "0.02765",  "0.028",  "0.028",  "0.01855",  "0.01855",  "0.0182",  "0.0182",  "0.01855",  "0.01855",  "0.0182",  "0.0182",  "0.02695",  "0.02695",  "0.0266",  "0.0266",  "0.0266",  "0.0266",  "0.02695",  "0.02695",  "0.0287",  "0.0287",  "0.02905",  "0.02905",  "0.0287",  "0.0287",  "0.02905",  "0.02905",  "0.02765",  "0.02765",  "0.028",  "0.028",  "0.028",  "0.028",  "0.02765",  "0.02765",  "0.035",  "0.035",  "0.03465",  "0.03465",  "0.035",  "0.035",  "0.03465",  "0.03465",  "0.0238",  "0.0238",  "0.02415",  "0.02415",  "0.0238",  "0.0238",  "0.02415",  "0.02415",  "0.0343",  "0.0343",  "0.03465",  "0.03465",  "0.03465",  "0.03465",  "0.0343",  "0.0343",  "0.0182",  "0.0182",  "0.01785",  "0.01785",  "0.01785",  "0.01785",  "0.0182",  "0.0182",  "0.00525",  "0.00525",  "0.0049",  "0.0049",  "0.0049",  "0.0049",  "0.00525",  "0.00525",  "0.01155",  "0.01155",  "0.0112",  "0.0112",  "0.01155",  "0.01155",  "0.0112",  "0.0112",  "0.00455",  "0.00455",  "0.00455",  "0.0042",  "0.0042",  "0.0042",  "0.0042",  "0.00455",  "0.0126",  "0.01295",  "0.01295",  "0.01295",  "0.01295",  "0.0126",  "0.0126",  "0.0126",  "0.00735",  "0.00735",  "0.007",  "0.007",  "0.00735",  "0.00735",  "0.007",  "0.007",  "0.0077",  "0.0077",  "0.00805",  "0.00805",  "0.00805",  "0.00805",  "0.0077",  "0.0077",  "0.0322",  "0.0322",  "0.03255",  "0.03255",  "0.03255",  "0.03255",  "0.0322",  "0.0322",  "0.02135",  "0.02135",  "0.0217",  "0.0217",  "0.0217",  "0.0217",  "0.02135",  "0.02135",  "0.00875",  "0.00875",  "0.00875",  "0.00875",  "0.0084",  "0.0084",  "0.0084",  "0.0084",  "0.0014",  "0.00175",  "0.00175",  "0.00175",  "0.00175",  "0.0014",  "0.0014",  "0.0014",  "0.00945",  "0.00945",  "0.0091",  "0.0091",  "0.0091",  "0.0091",  "0.00945",  "0.00945",  "0.01015",  "0.0098",  "0.0098",  "0.0098",  "0.0098",  "0.01015",  "0.01015",  "0.01015",  "0.0133",  "0.0133",  "0.01365",  "0.01365",  "0.0133",  "0.0133",  "0.01365",  "0.01365",  "0.02835",  "0.02835",  "0.0287",  "0.0287",  "0.0287",  "0.0287",  "0.02835",  "0.02835",  "0.01575",  "0.01575",  "0.0161",  "0.0161",  "0.01575",  "0.01575",  "0.0161",  "0.0161",  "0.0301",  "0.0301",  "0.02975",  "0.02975",  "0.0301",  "0.0301",  "0.02975",  "0.02975",  "0.01855",  "0.0189",  "0.0189",  "0.01855",  "0.01855",  "0.0189",  "0.0189",  "0.01855",  "0.03325",  "0.03325",  "0.0329",  "0.0329",  "0.0329",  "0.0329",  "0.03325",  "0.03325",  "0.0336",  "0.03395",  "0.03395",  "0.03395",  "0.03395",  "0.0336",  "0.0336",  "0.0336",  "0.0266",  "0.0266",  "0.02695",  "0.02695",  "0.02695",  "0.02695",  "0.0266",  "0.0266",  "0.02975",  "0.02975",  "0.0294",  "0.0294",  "0.0294",  "0.0294",  "0.02975",  "0.02975",  "0.01435",  "0.01435",  "0.0147",  "0.0147",  "0.0147",  "0.0147",  "0.01435",  "0.01435",  "0.02135",  "0.02135",  "0.0217",  "0.0217",  "0.0217",  "0.0217",  "0.02135",  "0.02135",  "0.02205",  "0.02205",  "0.0224",  "0.0224",  "0.0224",  "0.0224",  "0.02205",  "0.02205",  "0.03185",  "0.0322",  "0.0322",  "0.0322",  "0.0322",  "0.03185",  "0.03185",  "0.03185",  "0.00455",  "0.00455",  "0.0049",  "0.0049",  "0.00455",  "0.00455",  "0.0049",  "0.0049",  "0.0161",  "0.0161",  "0.01575",  "0.01575",  "0.0161",  "0.0161",  "0.01575",  "0.01575",  "0.0252",  "0.0252",  "0.02555",  "0.02555",  "0.02555",  "0.02555",  "0.0252",  "0.0252",  "0.02695",  "0.02695",  "0.0273",  "0.0273",  "0.0273",  "0.0273",  "0.02695",  "0.02695",  "0.0308",  "0.0308",  "0.03115",  "0.03115",  "0.03115",  "0.03115",  "0.0308",  "0.0308",  "0.02415",  "0.02415",  "0.0238",  "0.0238",  "0.02415",  "0.02415",  "0.0238",  "0.0238",  "0.0126",  "0.0126",  "0.01225",  "0.01225",  "0.0126",  "0.0126",  "0.01225",  "0.01225",  "0.03325",  "0.03325",  "0.0329",  "0.0329",  "0.0329",  "0.0329",  "0.03325",  "0.03325",  "0.01295",  "0.01295",  "0.0133",  "0.0133",  "0.01295",  "0.01295",  "0.0133",  "0.0133",  "0.0133",  "0.0133",  "0.01295",  "0.01295",  "0.01295",  "0.01295",  "0.0133",  "0.0133",  "0.01365",  "0.0133",  "0.0133",  "0.01365",  "0.01365",  "0.0133",  "0.0133",  "0.01365",  "0.0063",  "0.0063",  "0.00595",  "0.00595",  "0.00595",  "0.00595",  "0.0063",  "0.0063",  "0.0035",  "0.0035",  "0.00385",  "0.00385",  "0.0035",  "0.0035",  "0.00385",  "0.00385",  "0.01155",  "0.01155",  "0.0119",  "0.0119",  "0.01155",  "0.01155",  "0.0119",  "0.0119" });
	   public static List<Object> displacementValuesY3 = Arrays.
			   asList(new Object[] { "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "0.0",  "0.0",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "0.0",  "0.0",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "2.25E-4",  "2.25E-4",  "3.0E-4",  "3.0E-4",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "7.5E-5",  "7.5E-5",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "2.25E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "1.5E-4",  "2.25E-4",  "2.25E-4",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "7.5E-5",  "0.0",  "0.0",  "0.0",  "0.0" });
	   
	
	   
	/* ******************* Test Cases for Greenwood Scenario ******************** */
	
	// Test Case 1 (Real Data)
		public static List<Object> greenwoodValuesX1 = Arrays.
				asList(new Object[] { "" });
		public static List<Object> greenwoodValuesY1 = Arrays.
				asList(new Object[] { "" });

	// Test Case 2
		public static List<Object> greenwoodValuesX2 = Arrays.
			asList(new Object[] { "1.698970004", "2.0", "2.301029996", "2.477121255", "2.698970004", "3.0", "3.301029996", "3.477121255", "3.6989700042", "4.0", "4.301029996" });
		public static List<Object> greenwoodValuesY2 = Arrays.
			asList(new Object[] { "0.0343", "0.03465", "0.03185", "0.02905", "0.02555", "0.02065", "0.01575", "0.01295", "0.0098", "0.0056", "0.00105" });
	
	
	
	
	/* ******************* General Test Cases ******************** */
	
	// Test Case 1 (Maxima & Minima)
		public static List<Object> ValuesX1 = Arrays.
				asList(new Object[] { "0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1", "1.1" });
		public static List<Object> ValuesY1 = Arrays.
				asList(new Object[] { "0.14", "0.13", "0.12", "0.11", "0.12", "0.13", "0.14", "0.15", "0.16", "0.17", "0.18", "0.19" });
		
	// Test Case 2 (Employee)
		public static List<Object> ValuesX2 = Arrays.
				asList(new Object[] { "31", "34", "45", "46", "48", "49", "50", "51", "52", "53", "54" });
		public static List<Object> ValuesY2 = Arrays.
				asList(new Object[] { "2197", "2198", "2200", "2201", "2202", "2203", "2204", "2205", "2206", "2207", "2208" });
		
	// Test Case 2 (Periodic)
		public static List<Object> ValuesX3 = Arrays.
				asList(new Object[] { "0.8", "1", "1.2", "1.4", "1.6", "1.8", "2", "2.2", "2.4", "2.6", "2.8", "3", "3.2", "3.4", "3.6", "3.8" });
		public static List<Object> ValuesY3 = Arrays.
				asList(new Object[] { "0.138850286", "0.367879441", "0.09307413", "-0.199501135", "-0.163337714", "0.051080166", "0.135335283", "0.034240059", "-0.073392366", "-0.060088587", "0.018791343", "0.049787068", "0.012596214", "-0.026999543", "-0.022105356", "0.006912949" });

		
		/**
		 * 
		 * @return
		 */
		public static List<Feature> getDisplacementRealTestCase() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("X");
			
			featureX.setLstOfData(displacementValuesX1);

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("Y");
			
			featureY.setLstOfData(displacementValuesY1);

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
		
		
		/**
		 * 
		 * @return
		 */
		public static List<Feature> getDisplacementTestCase() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("X");
			
			featureX.setLstOfData(displacementValuesX2);

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("Y");
			
			featureY.setLstOfData(displacementValuesY2);

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
		
		
		/**
		 * 
		 * @return
		 */
		public static List<Feature> getDisplacementTestCase3() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("xCord");
			
			featureX.setLstOfData(displacementValuesX3);
			
			System.out.println("xCord Size: " + displacementValuesX3.size());

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("yCord");
			
			featureY.setLstOfData(displacementValuesY3);
			System.out.println("yCord Size: " + displacementValuesY3.size());

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
		
		
		/**
		 * 
		 * @return
		 */
		public static List<Feature> getGreenwoodRealTestCase() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("X");
			
			featureX.setLstOfData(greenwoodValuesX1);

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("Y");
			
			featureY.setLstOfData(greenwoodValuesY1);

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
		
		/**
		 * 
		 * @return
		 */
		public static List<Feature> getGreenwoodTestCase() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("X");
			
			featureX.setLstOfData(greenwoodValuesX2);

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("Y");
			
			featureY.setLstOfData(greenwoodValuesY2);

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
		
		
		/**
		 * Maxima and Minima Test Case
		 * 
		 * @return
		 */
		public static List<Feature> getTestCase1() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("X");
			
			featureX.setLstOfData(ValuesX1);

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("Y");
			
			featureY.setLstOfData(ValuesY1);

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
		
		
		/**
		 * Employee Test Case
		 * 
		 * @return
		 */
		public static List<Feature> getTestCase2() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("X");
			
			featureX.setLstOfData(ValuesX2);

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("Y");
			
			featureY.setLstOfData(ValuesY2);

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
		
		/**
		 * Periodic Test Case
		 * 
		 * @return
		 */
		public static List<Feature> getTestCase3() {
			
			List<Feature> lstOfFeature = new ArrayList<Feature>();

			Feature featureX = new Feature();
			featureX.setAttrName("X");
			
			featureX.setLstOfData(ValuesX3);

			lstOfFeature.add(featureX);
			
			
			Feature featureY = new Feature();
			featureY.setAttrName("Y");
			
			featureY.setLstOfData(ValuesY3);

			lstOfFeature.add(featureY);
			
			return lstOfFeature;
			
			
		}
		
}
