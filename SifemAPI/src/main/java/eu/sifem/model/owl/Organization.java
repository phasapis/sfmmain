package eu.sifem.model.owl;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Organization <br>
 * @version generated on Mon May 11 16:25:20 BST 2015 by jbjares
 */

public interface Organization extends Agent {

    /* ***************************************************
     * Property http://www.w3.org/ns/prov#actedOnBehalfOf
     */
     
    /**
     * Gets all property values for the actedOnBehalfOf property.<p>
     * 
     * @returns a collection of values for the actedOnBehalfOf property.
     */
    Collection<? extends Agent> getActedOnBehalfOf();

    /**
     * Checks if the class has a actedOnBehalfOf property value.<p>
     * 
     * @return true if there is a actedOnBehalfOf property value.
     */
    boolean hasActedOnBehalfOf();

    /**
     * Adds a actedOnBehalfOf property value.<p>
     * 
     * @param newActedOnBehalfOf the actedOnBehalfOf property value to be added
     */
    void addActedOnBehalfOf(Agent newActedOnBehalfOf);

    /**
     * Removes a actedOnBehalfOf property value.<p>
     * 
     * @param oldActedOnBehalfOf the actedOnBehalfOf property value to be removed.
     */
    void removeActedOnBehalfOf(Agent oldActedOnBehalfOf);


    /* ***************************************************
     * Property http://www.w3.org/ns/prov#qualifiedDelegation
     */
     
    /**
     * Gets all property values for the qualifiedDelegation property.<p>
     * 
     * @returns a collection of values for the qualifiedDelegation property.
     */
    Collection<? extends Delegation> getQualifiedDelegation();

    /**
     * Checks if the class has a qualifiedDelegation property value.<p>
     * 
     * @return true if there is a qualifiedDelegation property value.
     */
    boolean hasQualifiedDelegation();

    /**
     * Adds a qualifiedDelegation property value.<p>
     * 
     * @param newQualifiedDelegation the qualifiedDelegation property value to be added
     */
    void addQualifiedDelegation(Delegation newQualifiedDelegation);

    /**
     * Removes a qualifiedDelegation property value.<p>
     * 
     * @param oldQualifiedDelegation the qualifiedDelegation property value to be removed.
     */
    void removeQualifiedDelegation(Delegation oldQualifiedDelegation);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
