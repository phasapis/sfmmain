package eu.sifem.model.owl.impl;

import eu.sifem.model.owl.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultLoading_ <br>
 * @version generated on Mon May 11 16:25:20 BST 2015 by jbjares
 */
public class DefaultLoading_ extends WrappedIndividualImpl implements Loading_ {

    public DefaultLoading_(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#isLoadOf
     */
     
    public Collection<? extends Finite_Element_Model_Domain> getIsLoadOf() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ISLOADOF,
                                               DefaultFinite_Element_Model_Domain.class);
    }

    public boolean hasIsLoadOf() {
	   return !getIsLoadOf().isEmpty();
    }

    public void addIsLoadOf(Finite_Element_Model_Domain newIsLoadOf) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ISLOADOF,
                                       newIsLoadOf);
    }

    public void removeIsLoadOf(Finite_Element_Model_Domain oldIsLoadOf) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ISLOADOF,
                                          oldIsLoadOf);
    }


    /* ***************************************************
     * Data Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#hasNumberOfForces
     */
     
    public Collection<? extends Integer> getHasNumberOfForces() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNUMBEROFFORCES, Integer.class);
    }

    public boolean hasHasNumberOfForces() {
		return !getHasNumberOfForces().isEmpty();
    }

    public void addHasNumberOfForces(Integer newHasNumberOfForces) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNUMBEROFFORCES, newHasNumberOfForces);
    }

    public void removeHasNumberOfForces(Integer oldHasNumberOfForces) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNUMBEROFFORCES, oldHasNumberOfForces);
    }


}
