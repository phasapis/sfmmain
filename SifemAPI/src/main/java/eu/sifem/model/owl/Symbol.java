package eu.sifem.model.owl;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Symbol <br>
 * @version generated on Mon May 11 16:25:19 BST 2015 by jbjares
 */

public interface Symbol extends Equation {

    /* ***************************************************
     * Property http://codata.jp/OML-Property.owl#PropertyName
     */
     
    /**
     * Gets all property values for the PropertyName property.<p>
     * 
     * @returns a collection of values for the PropertyName property.
     */
    Collection<? extends Property> getPropertyName();

    /**
     * Checks if the class has a PropertyName property value.<p>
     * 
     * @return true if there is a PropertyName property value.
     */
    boolean hasPropertyName();

    /**
     * Adds a PropertyName property value.<p>
     * 
     * @param newPropertyName the PropertyName property value to be added
     */
    void addPropertyName(Property newPropertyName);

    /**
     * Removes a PropertyName property value.<p>
     * 
     * @param oldPropertyName the PropertyName property value to be removed.
     */
    void removePropertyName(Property oldPropertyName);


    /* ***************************************************
     * Property http://codata.jp/OML-Property.owl#Eq
     */
     
    /**
     * Gets all property values for the Eq property.<p>
     * 
     * @returns a collection of values for the Eq property.
     */
    Collection<? extends Object> getEq();

    /**
     * Checks if the class has a Eq property value.<p>
     * 
     * @return true if there is a Eq property value.
     */
    boolean hasEq();

    /**
     * Adds a Eq property value.<p>
     * 
     * @param newEq the Eq property value to be added
     */
    void addEq(Object newEq);

    /**
     * Removes a Eq property value.<p>
     * 
     * @param oldEq the Eq property value to be removed.
     */
    void removeEq(Object oldEq);



    /* ***************************************************
     * Property http://codata.jp/OML-Property.owl#Notation
     */
     
    /**
     * Gets all property values for the Notation property.<p>
     * 
     * @returns a collection of values for the Notation property.
     */
    Collection<? extends Object> getNotation();

    /**
     * Checks if the class has a Notation property value.<p>
     * 
     * @return true if there is a Notation property value.
     */
    boolean hasNotation();

    /**
     * Adds a Notation property value.<p>
     * 
     * @param newNotation the Notation property value to be added
     */
    void addNotation(Object newNotation);

    /**
     * Removes a Notation property value.<p>
     * 
     * @param oldNotation the Notation property value to be removed.
     */
    void removeNotation(Object oldNotation);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
