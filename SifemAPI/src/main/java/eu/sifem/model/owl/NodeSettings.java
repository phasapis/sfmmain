package eu.sifem.model.owl;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: NodeSettings <br>
 * @version generated on Mon May 11 16:25:19 BST 2015 by jbjares
 */

public interface NodeSettings extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#areNodeSettingsOf
     */
     
    /**
     * Gets all property values for the areNodeSettingsOf property.<p>
     * 
     * @returns a collection of values for the areNodeSettingsOf property.
     */
    Collection<? extends Node> getAreNodeSettingsOf();

    /**
     * Checks if the class has a areNodeSettingsOf property value.<p>
     * 
     * @return true if there is a areNodeSettingsOf property value.
     */
    boolean hasAreNodeSettingsOf();

    /**
     * Adds a areNodeSettingsOf property value.<p>
     * 
     * @param newAreNodeSettingsOf the areNodeSettingsOf property value to be added
     */
    void addAreNodeSettingsOf(Node newAreNodeSettingsOf);

    /**
     * Removes a areNodeSettingsOf property value.<p>
     * 
     * @param oldAreNodeSettingsOf the areNodeSettingsOf property value to be removed.
     */
    void removeAreNodeSettingsOf(Node oldAreNodeSettingsOf);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N1
     */
     
    /**
     * Gets all property values for the ID_N1 property.<p>
     * 
     * @returns a collection of values for the ID_N1 property.
     */
    Collection<? extends Integer> getID_N1();

    /**
     * Checks if the class has a ID_N1 property value.<p>
     * 
     * @return true if there is a ID_N1 property value.
     */
    boolean hasID_N1();

    /**
     * Adds a ID_N1 property value.<p>
     * 
     * @param newID_N1 the ID_N1 property value to be added
     */
    void addID_N1(Integer newID_N1);

    /**
     * Removes a ID_N1 property value.<p>
     * 
     * @param oldID_N1 the ID_N1 property value to be removed.
     */
    void removeID_N1(Integer oldID_N1);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N10
     */
     
    /**
     * Gets all property values for the ID_N10 property.<p>
     * 
     * @returns a collection of values for the ID_N10 property.
     */
    Collection<? extends Integer> getID_N10();

    /**
     * Checks if the class has a ID_N10 property value.<p>
     * 
     * @return true if there is a ID_N10 property value.
     */
    boolean hasID_N10();

    /**
     * Adds a ID_N10 property value.<p>
     * 
     * @param newID_N10 the ID_N10 property value to be added
     */
    void addID_N10(Integer newID_N10);

    /**
     * Removes a ID_N10 property value.<p>
     * 
     * @param oldID_N10 the ID_N10 property value to be removed.
     */
    void removeID_N10(Integer oldID_N10);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N11
     */
     
    /**
     * Gets all property values for the ID_N11 property.<p>
     * 
     * @returns a collection of values for the ID_N11 property.
     */
    Collection<? extends Integer> getID_N11();

    /**
     * Checks if the class has a ID_N11 property value.<p>
     * 
     * @return true if there is a ID_N11 property value.
     */
    boolean hasID_N11();

    /**
     * Adds a ID_N11 property value.<p>
     * 
     * @param newID_N11 the ID_N11 property value to be added
     */
    void addID_N11(Integer newID_N11);

    /**
     * Removes a ID_N11 property value.<p>
     * 
     * @param oldID_N11 the ID_N11 property value to be removed.
     */
    void removeID_N11(Integer oldID_N11);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N2
     */
     
    /**
     * Gets all property values for the ID_N2 property.<p>
     * 
     * @returns a collection of values for the ID_N2 property.
     */
    Collection<? extends Integer> getID_N2();

    /**
     * Checks if the class has a ID_N2 property value.<p>
     * 
     * @return true if there is a ID_N2 property value.
     */
    boolean hasID_N2();

    /**
     * Adds a ID_N2 property value.<p>
     * 
     * @param newID_N2 the ID_N2 property value to be added
     */
    void addID_N2(Integer newID_N2);

    /**
     * Removes a ID_N2 property value.<p>
     * 
     * @param oldID_N2 the ID_N2 property value to be removed.
     */
    void removeID_N2(Integer oldID_N2);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N3
     */
     
    /**
     * Gets all property values for the ID_N3 property.<p>
     * 
     * @returns a collection of values for the ID_N3 property.
     */
    Collection<? extends Integer> getID_N3();

    /**
     * Checks if the class has a ID_N3 property value.<p>
     * 
     * @return true if there is a ID_N3 property value.
     */
    boolean hasID_N3();

    /**
     * Adds a ID_N3 property value.<p>
     * 
     * @param newID_N3 the ID_N3 property value to be added
     */
    void addID_N3(Integer newID_N3);

    /**
     * Removes a ID_N3 property value.<p>
     * 
     * @param oldID_N3 the ID_N3 property value to be removed.
     */
    void removeID_N3(Integer oldID_N3);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N4
     */
     
    /**
     * Gets all property values for the ID_N4 property.<p>
     * 
     * @returns a collection of values for the ID_N4 property.
     */
    Collection<? extends Integer> getID_N4();

    /**
     * Checks if the class has a ID_N4 property value.<p>
     * 
     * @return true if there is a ID_N4 property value.
     */
    boolean hasID_N4();

    /**
     * Adds a ID_N4 property value.<p>
     * 
     * @param newID_N4 the ID_N4 property value to be added
     */
    void addID_N4(Integer newID_N4);

    /**
     * Removes a ID_N4 property value.<p>
     * 
     * @param oldID_N4 the ID_N4 property value to be removed.
     */
    void removeID_N4(Integer oldID_N4);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N5
     */
     
    /**
     * Gets all property values for the ID_N5 property.<p>
     * 
     * @returns a collection of values for the ID_N5 property.
     */
    Collection<? extends Integer> getID_N5();

    /**
     * Checks if the class has a ID_N5 property value.<p>
     * 
     * @return true if there is a ID_N5 property value.
     */
    boolean hasID_N5();

    /**
     * Adds a ID_N5 property value.<p>
     * 
     * @param newID_N5 the ID_N5 property value to be added
     */
    void addID_N5(Integer newID_N5);

    /**
     * Removes a ID_N5 property value.<p>
     * 
     * @param oldID_N5 the ID_N5 property value to be removed.
     */
    void removeID_N5(Integer oldID_N5);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N6
     */
     
    /**
     * Gets all property values for the ID_N6 property.<p>
     * 
     * @returns a collection of values for the ID_N6 property.
     */
    Collection<? extends Integer> getID_N6();

    /**
     * Checks if the class has a ID_N6 property value.<p>
     * 
     * @return true if there is a ID_N6 property value.
     */
    boolean hasID_N6();

    /**
     * Adds a ID_N6 property value.<p>
     * 
     * @param newID_N6 the ID_N6 property value to be added
     */
    void addID_N6(Integer newID_N6);

    /**
     * Removes a ID_N6 property value.<p>
     * 
     * @param oldID_N6 the ID_N6 property value to be removed.
     */
    void removeID_N6(Integer oldID_N6);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N7
     */
     
    /**
     * Gets all property values for the ID_N7 property.<p>
     * 
     * @returns a collection of values for the ID_N7 property.
     */
    Collection<? extends Integer> getID_N7();

    /**
     * Checks if the class has a ID_N7 property value.<p>
     * 
     * @return true if there is a ID_N7 property value.
     */
    boolean hasID_N7();

    /**
     * Adds a ID_N7 property value.<p>
     * 
     * @param newID_N7 the ID_N7 property value to be added
     */
    void addID_N7(Integer newID_N7);

    /**
     * Removes a ID_N7 property value.<p>
     * 
     * @param oldID_N7 the ID_N7 property value to be removed.
     */
    void removeID_N7(Integer oldID_N7);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N8
     */
     
    /**
     * Gets all property values for the ID_N8 property.<p>
     * 
     * @returns a collection of values for the ID_N8 property.
     */
    Collection<? extends Integer> getID_N8();

    /**
     * Checks if the class has a ID_N8 property value.<p>
     * 
     * @return true if there is a ID_N8 property value.
     */
    boolean hasID_N8();

    /**
     * Adds a ID_N8 property value.<p>
     * 
     * @param newID_N8 the ID_N8 property value to be added
     */
    void addID_N8(Integer newID_N8);

    /**
     * Removes a ID_N8 property value.<p>
     * 
     * @param oldID_N8 the ID_N8 property value to be removed.
     */
    void removeID_N8(Integer oldID_N8);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#ID_N9
     */
     
    /**
     * Gets all property values for the ID_N9 property.<p>
     * 
     * @returns a collection of values for the ID_N9 property.
     */
    Collection<? extends Integer> getID_N9();

    /**
     * Checks if the class has a ID_N9 property value.<p>
     * 
     * @return true if there is a ID_N9 property value.
     */
    boolean hasID_N9();

    /**
     * Adds a ID_N9 property value.<p>
     * 
     * @param newID_N9 the ID_N9 property value to be added
     */
    void addID_N9(Integer newID_N9);

    /**
     * Removes a ID_N9 property value.<p>
     * 
     * @param oldID_N9 the ID_N9 property value to be removed.
     */
    void removeID_N9(Integer oldID_N9);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasConstraintColour
     */
     
    /**
     * Gets all property values for the hasConstraintColour property.<p>
     * 
     * @returns a collection of values for the hasConstraintColour property.
     */
    Collection<? extends Object> getHasConstraintColour();

    /**
     * Checks if the class has a hasConstraintColour property value.<p>
     * 
     * @return true if there is a hasConstraintColour property value.
     */
    boolean hasHasConstraintColour();

    /**
     * Adds a hasConstraintColour property value.<p>
     * 
     * @param newHasConstraintColour the hasConstraintColour property value to be added
     */
    void addHasConstraintColour(Object newHasConstraintColour);

    /**
     * Removes a hasConstraintColour property value.<p>
     * 
     * @param oldHasConstraintColour the hasConstraintColour property value to be removed.
     */
    void removeHasConstraintColour(Object oldHasConstraintColour);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasNodeColour
     */
     
    /**
     * Gets all property values for the hasNodeColour property.<p>
     * 
     * @returns a collection of values for the hasNodeColour property.
     */
    Collection<? extends Integer> getHasNodeColour();

    /**
     * Checks if the class has a hasNodeColour property value.<p>
     * 
     * @return true if there is a hasNodeColour property value.
     */
    boolean hasHasNodeColour();

    /**
     * Adds a hasNodeColour property value.<p>
     * 
     * @param newHasNodeColour the hasNodeColour property value to be added
     */
    void addHasNodeColour(Integer newHasNodeColour);

    /**
     * Removes a hasNodeColour property value.<p>
     * 
     * @param oldHasNodeColour the hasNodeColour property value to be removed.
     */
    void removeHasNodeColour(Integer oldHasNodeColour);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasUnusedNodeBlockValue1
     */
     
    /**
     * Gets all property values for the hasUnusedNodeBlockValue1 property.<p>
     * 
     * @returns a collection of values for the hasUnusedNodeBlockValue1 property.
     */
    Collection<? extends Integer> getHasUnusedNodeBlockValue1();

    /**
     * Checks if the class has a hasUnusedNodeBlockValue1 property value.<p>
     * 
     * @return true if there is a hasUnusedNodeBlockValue1 property value.
     */
    boolean hasHasUnusedNodeBlockValue1();

    /**
     * Adds a hasUnusedNodeBlockValue1 property value.<p>
     * 
     * @param newHasUnusedNodeBlockValue1 the hasUnusedNodeBlockValue1 property value to be added
     */
    void addHasUnusedNodeBlockValue1(Integer newHasUnusedNodeBlockValue1);

    /**
     * Removes a hasUnusedNodeBlockValue1 property value.<p>
     * 
     * @param oldHasUnusedNodeBlockValue1 the hasUnusedNodeBlockValue1 property value to be removed.
     */
    void removeHasUnusedNodeBlockValue1(Integer oldHasUnusedNodeBlockValue1);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasUnusedNodeBlockValue2
     */
     
    /**
     * Gets all property values for the hasUnusedNodeBlockValue2 property.<p>
     * 
     * @returns a collection of values for the hasUnusedNodeBlockValue2 property.
     */
    Collection<? extends Integer> getHasUnusedNodeBlockValue2();

    /**
     * Checks if the class has a hasUnusedNodeBlockValue2 property value.<p>
     * 
     * @return true if there is a hasUnusedNodeBlockValue2 property value.
     */
    boolean hasHasUnusedNodeBlockValue2();

    /**
     * Adds a hasUnusedNodeBlockValue2 property value.<p>
     * 
     * @param newHasUnusedNodeBlockValue2 the hasUnusedNodeBlockValue2 property value to be added
     */
    void addHasUnusedNodeBlockValue2(Integer newHasUnusedNodeBlockValue2);

    /**
     * Removes a hasUnusedNodeBlockValue2 property value.<p>
     * 
     * @param oldHasUnusedNodeBlockValue2 the hasUnusedNodeBlockValue2 property value to be removed.
     */
    void removeHasUnusedNodeBlockValue2(Integer oldHasUnusedNodeBlockValue2);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
