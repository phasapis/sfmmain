package eu.sifem.model.owl;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: MaterialSettings <br>
 * @version generated on Mon May 11 16:25:19 BST 2015 by jbjares
 */

public interface MaterialSettings extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#areMaterialSettingsOf
     */
     
    /**
     * Gets all property values for the areMaterialSettingsOf property.<p>
     * 
     * @returns a collection of values for the areMaterialSettingsOf property.
     */
    Collection<? extends Material> getAreMaterialSettingsOf();

    /**
     * Checks if the class has a areMaterialSettingsOf property value.<p>
     * 
     * @return true if there is a areMaterialSettingsOf property value.
     */
    boolean hasAreMaterialSettingsOf();

    /**
     * Adds a areMaterialSettingsOf property value.<p>
     * 
     * @param newAreMaterialSettingsOf the areMaterialSettingsOf property value to be added
     */
    void addAreMaterialSettingsOf(Material newAreMaterialSettingsOf);

    /**
     * Removes a areMaterialSettingsOf property value.<p>
     * 
     * @param oldAreMaterialSettingsOf the areMaterialSettingsOf property value to be removed.
     */
    void removeAreMaterialSettingsOf(Material oldAreMaterialSettingsOf);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#INDJOT
     */
     
    /**
     * Gets all property values for the INDJOT property.<p>
     * 
     * @returns a collection of values for the INDJOT property.
     */
    Collection<? extends Object> getINDJOT();

    /**
     * Checks if the class has a INDJOT property value.<p>
     * 
     * @return true if there is a INDJOT property value.
     */
    boolean hasINDJOT();

    /**
     * Adds a INDJOT property value.<p>
     * 
     * @param newINDJOT the INDJOT property value to be added
     */
    void addINDJOT(Object newINDJOT);

    /**
     * Removes a INDJOT property value.<p>
     * 
     * @param oldINDJOT the INDJOT property value to be removed.
     */
    void removeINDJOT(Object oldINDJOT);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#MATTYPE
     */
     
    /**
     * Gets all property values for the MATTYPE property.<p>
     * 
     * @returns a collection of values for the MATTYPE property.
     */
    Collection<? extends Integer> getMATTYPE();

    /**
     * Checks if the class has a MATTYPE property value.<p>
     * 
     * @return true if there is a MATTYPE property value.
     */
    boolean hasMATTYPE();

    /**
     * Adds a MATTYPE property value.<p>
     * 
     * @param newMATTYPE the MATTYPE property value to be added
     */
    void addMATTYPE(Integer newMATTYPE);

    /**
     * Removes a MATTYPE property value.<p>
     * 
     * @param oldMATTYPE the MATTYPE property value to be removed.
     */
    void removeMATTYPE(Integer oldMATTYPE);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#model
     */
     
    /**
     * Gets all property values for the model property.<p>
     * 
     * @returns a collection of values for the model property.
     */
    Collection<? extends Integer> getModel();

    /**
     * Checks if the class has a model property value.<p>
     * 
     * @return true if there is a model property value.
     */
    boolean hasModel();

    /**
     * Adds a model property value.<p>
     * 
     * @param newModel the model property value to be added
     */
    void addModel(Integer newModel);

    /**
     * Removes a model property value.<p>
     * 
     * @param oldModel the model property value to be removed.
     */
    void removeModel(Integer oldModel);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
