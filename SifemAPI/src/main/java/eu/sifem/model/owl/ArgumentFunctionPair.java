package eu.sifem.model.owl;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: ArgumentFunctionPair <br>
 * @version generated on Mon May 11 16:25:19 BST 2015 by jbjares
 */

public interface ArgumentFunctionPair extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#isArgumentFunctionPairOf
     */
     
    /**
     * Gets all property values for the isArgumentFunctionPairOf property.<p>
     * 
     * @returns a collection of values for the isArgumentFunctionPairOf property.
     */
    Collection<? extends Solver> getIsArgumentFunctionPairOf();

    /**
     * Checks if the class has a isArgumentFunctionPairOf property value.<p>
     * 
     * @return true if there is a isArgumentFunctionPairOf property value.
     */
    boolean hasIsArgumentFunctionPairOf();

    /**
     * Adds a isArgumentFunctionPairOf property value.<p>
     * 
     * @param newIsArgumentFunctionPairOf the isArgumentFunctionPairOf property value to be added
     */
    void addIsArgumentFunctionPairOf(Solver newIsArgumentFunctionPairOf);

    /**
     * Removes a isArgumentFunctionPairOf property value.<p>
     * 
     * @param oldIsArgumentFunctionPairOf the isArgumentFunctionPairOf property value to be removed.
     */
    void removeIsArgumentFunctionPairOf(Solver oldIsArgumentFunctionPairOf);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasArgument
     */
     
    /**
     * Gets all property values for the hasArgument property.<p>
     * 
     * @returns a collection of values for the hasArgument property.
     */
    Collection<? extends Object> getHasArgument();

    /**
     * Checks if the class has a hasArgument property value.<p>
     * 
     * @return true if there is a hasArgument property value.
     */
    boolean hasHasArgument();

    /**
     * Adds a hasArgument property value.<p>
     * 
     * @param newHasArgument the hasArgument property value to be added
     */
    void addHasArgument(Object newHasArgument);

    /**
     * Removes a hasArgument property value.<p>
     * 
     * @param oldHasArgument the hasArgument property value to be removed.
     */
    void removeHasArgument(Object oldHasArgument);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasArgumentFunctionPairIndex
     */
     
    /**
     * Gets all property values for the hasArgumentFunctionPairIndex property.<p>
     * 
     * @returns a collection of values for the hasArgumentFunctionPairIndex property.
     */
    Collection<? extends Integer> getHasArgumentFunctionPairIndex();

    /**
     * Checks if the class has a hasArgumentFunctionPairIndex property value.<p>
     * 
     * @return true if there is a hasArgumentFunctionPairIndex property value.
     */
    boolean hasHasArgumentFunctionPairIndex();

    /**
     * Adds a hasArgumentFunctionPairIndex property value.<p>
     * 
     * @param newHasArgumentFunctionPairIndex the hasArgumentFunctionPairIndex property value to be added
     */
    void addHasArgumentFunctionPairIndex(Integer newHasArgumentFunctionPairIndex);

    /**
     * Removes a hasArgumentFunctionPairIndex property value.<p>
     * 
     * @param oldHasArgumentFunctionPairIndex the hasArgumentFunctionPairIndex property value to be removed.
     */
    void removeHasArgumentFunctionPairIndex(Integer oldHasArgumentFunctionPairIndex);



    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasFunction
     */
     
    /**
     * Gets all property values for the hasFunction property.<p>
     * 
     * @returns a collection of values for the hasFunction property.
     */
    Collection<? extends Object> getHasFunction();

    /**
     * Checks if the class has a hasFunction property value.<p>
     * 
     * @return true if there is a hasFunction property value.
     */
    boolean hasHasFunction();

    /**
     * Adds a hasFunction property value.<p>
     * 
     * @param newHasFunction the hasFunction property value to be added
     */
    void addHasFunction(Object newHasFunction);

    /**
     * Removes a hasFunction property value.<p>
     * 
     * @param oldHasFunction the hasFunction property value to be removed.
     */
    void removeHasFunction(Object oldHasFunction);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
