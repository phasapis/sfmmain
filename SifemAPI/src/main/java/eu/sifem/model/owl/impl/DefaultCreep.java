package eu.sifem.model.owl.impl;

import eu.sifem.model.owl.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultCreep <br>
 * @version generated on Mon May 11 16:25:18 BST 2015 by jbjares
 */
public class DefaultCreep extends WrappedIndividualImpl implements Creep {

    public DefaultCreep(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#CreepTime
     */
     
    public Collection<? extends Time> getCreepTime() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_CREEPTIME,
                                               DefaultTime.class);
    }

    public boolean hasCreepTime() {
	   return !getCreepTime().isEmpty();
    }

    public void addCreepTime(Time newCreepTime) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_CREEPTIME,
                                       newCreepTime);
    }

    public void removeCreepTime(Time oldCreepTime) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_CREEPTIME,
                                          oldCreepTime);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TestTemperature
     */
     
    public Collection<? extends Temperature> getTestTemperature() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TESTTEMPERATURE,
                                               DefaultTemperature.class);
    }

    public boolean hasTestTemperature() {
	   return !getTestTemperature().isEmpty();
    }

    public void addTestTemperature(Temperature newTestTemperature) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TESTTEMPERATURE,
                                       newTestTemperature);
    }

    public void removeTestTemperature(Temperature oldTestTemperature) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TESTTEMPERATURE,
                                          oldTestTemperature);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TimeToReachTotalStrain0.5
     */
     
    public Collection<? extends Time> getTimeToReachTotalStrain0_5() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN0_5,
                                               DefaultTime.class);
    }

    public boolean hasTimeToReachTotalStrain0_5() {
	   return !getTimeToReachTotalStrain0_5().isEmpty();
    }

    public void addTimeToReachTotalStrain0_5(Time newTimeToReachTotalStrain0_5) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN0_5,
                                       newTimeToReachTotalStrain0_5);
    }

    public void removeTimeToReachTotalStrain0_5(Time oldTimeToReachTotalStrain0_5) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN0_5,
                                          oldTimeToReachTotalStrain0_5);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TimeToReachTotalStrain1.0
     */
     
    public Collection<? extends Time> getTimeToReachTotalStrain1_0() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN1_0,
                                               DefaultTime.class);
    }

    public boolean hasTimeToReachTotalStrain1_0() {
	   return !getTimeToReachTotalStrain1_0().isEmpty();
    }

    public void addTimeToReachTotalStrain1_0(Time newTimeToReachTotalStrain1_0) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN1_0,
                                       newTimeToReachTotalStrain1_0);
    }

    public void removeTimeToReachTotalStrain1_0(Time oldTimeToReachTotalStrain1_0) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN1_0,
                                          oldTimeToReachTotalStrain1_0);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TimeToReachTotalStrain2.0
     */
     
    public Collection<? extends Time> getTimeToReachTotalStrain2_0() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN2_0,
                                               DefaultTime.class);
    }

    public boolean hasTimeToReachTotalStrain2_0() {
	   return !getTimeToReachTotalStrain2_0().isEmpty();
    }

    public void addTimeToReachTotalStrain2_0(Time newTimeToReachTotalStrain2_0) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN2_0,
                                       newTimeToReachTotalStrain2_0);
    }

    public void removeTimeToReachTotalStrain2_0(Time oldTimeToReachTotalStrain2_0) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN2_0,
                                          oldTimeToReachTotalStrain2_0);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TimeToReachTotalStrain5.0
     */
     
    public Collection<? extends Time> getTimeToReachTotalStrain5_0() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN5_0,
                                               DefaultTime.class);
    }

    public boolean hasTimeToReachTotalStrain5_0() {
	   return !getTimeToReachTotalStrain5_0().isEmpty();
    }

    public void addTimeToReachTotalStrain5_0(Time newTimeToReachTotalStrain5_0) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN5_0,
                                       newTimeToReachTotalStrain5_0);
    }

    public void removeTimeToReachTotalStrain5_0(Time oldTimeToReachTotalStrain5_0) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TIMETOREACHTOTALSTRAIN5_0,
                                          oldTimeToReachTotalStrain5_0);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TimeToRupture
     */
     
    public Collection<? extends Time> getTimeToRupture() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TIMETORUPTURE,
                                               DefaultTime.class);
    }

    public boolean hasTimeToRupture() {
	   return !getTimeToRupture().isEmpty();
    }

    public void addTimeToRupture(Time newTimeToRupture) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TIMETORUPTURE,
                                       newTimeToRupture);
    }

    public void removeTimeToRupture(Time oldTimeToRupture) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TIMETORUPTURE,
                                          oldTimeToRupture);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TimeToSecondaryCreep
     */
     
    public Collection<? extends Time> getTimeToSecondaryCreep() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TIMETOSECONDARYCREEP,
                                               DefaultTime.class);
    }

    public boolean hasTimeToSecondaryCreep() {
	   return !getTimeToSecondaryCreep().isEmpty();
    }

    public void addTimeToSecondaryCreep(Time newTimeToSecondaryCreep) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TIMETOSECONDARYCREEP,
                                       newTimeToSecondaryCreep);
    }

    public void removeTimeToSecondaryCreep(Time oldTimeToSecondaryCreep) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TIMETOSECONDARYCREEP,
                                          oldTimeToSecondaryCreep);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#TimeToTertiaryCreep
     */
     
    public Collection<? extends Time> getTimeToTertiaryCreep() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_TIMETOTERTIARYCREEP,
                                               DefaultTime.class);
    }

    public boolean hasTimeToTertiaryCreep() {
	   return !getTimeToTertiaryCreep().isEmpty();
    }

    public void addTimeToTertiaryCreep(Time newTimeToTertiaryCreep) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_TIMETOTERTIARYCREEP,
                                       newTimeToTertiaryCreep);
    }

    public void removeTimeToTertiaryCreep(Time oldTimeToTertiaryCreep) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_TIMETOTERTIARYCREEP,
                                          oldTimeToTertiaryCreep);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#UnitDimension
     */
     
    public Collection<? extends UnitDimension> getUnitDimension() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_UNITDIMENSION,
                                               DefaultUnitDimension.class);
    }

    public boolean hasUnitDimension() {
	   return !getUnitDimension().isEmpty();
    }

    public void addUnitDimension(UnitDimension newUnitDimension) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_UNITDIMENSION,
                                       newUnitDimension);
    }

    public void removeUnitDimension(UnitDimension oldUnitDimension) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_UNITDIMENSION,
                                          oldUnitDimension);
    }


    /* ***************************************************
     * Object Property http://codata.jp/OML-Property.owl#UnitSystem
     */
     
    public Collection<? extends UnitSystem> getUnitSystem() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_UNITSYSTEM,
                                               DefaultUnitSystem.class);
    }

    public boolean hasUnitSystem() {
	   return !getUnitSystem().isEmpty();
    }

    public void addUnitSystem(UnitSystem newUnitSystem) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_UNITSYSTEM,
                                       newUnitSystem);
    }

    public void removeUnitSystem(UnitSystem oldUnitSystem) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_UNITSYSTEM,
                                          oldUnitSystem);
    }


    /* ***************************************************
     * Object Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#isMaterialPropertyOf
     */
     
    public Collection<? extends WrappedIndividual> getIsMaterialPropertyOf() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ISMATERIALPROPERTYOF,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIsMaterialPropertyOf() {
	   return !getIsMaterialPropertyOf().isEmpty();
    }

    public void addIsMaterialPropertyOf(WrappedIndividual newIsMaterialPropertyOf) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ISMATERIALPROPERTYOF,
                                       newIsMaterialPropertyOf);
    }

    public void removeIsMaterialPropertyOf(WrappedIndividual oldIsMaterialPropertyOf) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ISMATERIALPROPERTYOF,
                                          oldIsMaterialPropertyOf);
    }


    /* ***************************************************
     * Object Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#isMaterialPropertyUsedBy
     */
     
    public Collection<? extends Solver> getIsMaterialPropertyUsedBy() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ISMATERIALPROPERTYUSEDBY,
                                               DefaultSolver.class);
    }

    public boolean hasIsMaterialPropertyUsedBy() {
	   return !getIsMaterialPropertyUsedBy().isEmpty();
    }

    public void addIsMaterialPropertyUsedBy(Solver newIsMaterialPropertyUsedBy) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ISMATERIALPROPERTYUSEDBY,
                                       newIsMaterialPropertyUsedBy);
    }

    public void removeIsMaterialPropertyUsedBy(Solver oldIsMaterialPropertyUsedBy) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ISMATERIALPROPERTYUSEDBY,
                                          oldIsMaterialPropertyUsedBy);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#AppliedStress
     */
     
    public Collection<? extends Object> getAppliedStress() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_APPLIEDSTRESS, Object.class);
    }

    public boolean hasAppliedStress() {
		return !getAppliedStress().isEmpty();
    }

    public void addAppliedStress(Object newAppliedStress) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_APPLIEDSTRESS, newAppliedStress);
    }

    public void removeAppliedStress(Object oldAppliedStress) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_APPLIEDSTRESS, oldAppliedStress);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#CreepCurve
     */
     
    public Collection<? extends Object> getCreepCurve() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CREEPCURVE, Object.class);
    }

    public boolean hasCreepCurve() {
		return !getCreepCurve().isEmpty();
    }

    public void addCreepCurve(Object newCreepCurve) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CREEPCURVE, newCreepCurve);
    }

    public void removeCreepCurve(Object oldCreepCurve) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CREEPCURVE, oldCreepCurve);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#CreepTestResuls
     */
     
    public Collection<? extends Object> getCreepTestResuls() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CREEPTESTRESULS, Object.class);
    }

    public boolean hasCreepTestResuls() {
		return !getCreepTestResuls().isEmpty();
    }

    public void addCreepTestResuls(Object newCreepTestResuls) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CREEPTESTRESULS, newCreepTestResuls);
    }

    public void removeCreepTestResuls(Object oldCreepTestResuls) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CREEPTESTRESULS, oldCreepTestResuls);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#Elongation
     */
     
    public Collection<? extends Object> getElongation() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ELONGATION, Object.class);
    }

    public boolean hasElongation() {
		return !getElongation().isEmpty();
    }

    public void addElongation(Object newElongation) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ELONGATION, newElongation);
    }

    public void removeElongation(Object oldElongation) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ELONGATION, oldElongation);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#InstantaneousStrain
     */
     
    public Collection<? extends Object> getInstantaneousStrain() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_INSTANTANEOUSSTRAIN, Object.class);
    }

    public boolean hasInstantaneousStrain() {
		return !getInstantaneousStrain().isEmpty();
    }

    public void addInstantaneousStrain(Object newInstantaneousStrain) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_INSTANTANEOUSSTRAIN, newInstantaneousStrain);
    }

    public void removeInstantaneousStrain(Object oldInstantaneousStrain) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_INSTANTANEOUSSTRAIN, oldInstantaneousStrain);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#MaximalValue
     */
     
    public Collection<? extends Object> getMaximalValue() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MAXIMALVALUE, Object.class);
    }

    public boolean hasMaximalValue() {
		return !getMaximalValue().isEmpty();
    }

    public void addMaximalValue(Object newMaximalValue) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MAXIMALVALUE, newMaximalValue);
    }

    public void removeMaximalValue(Object oldMaximalValue) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MAXIMALVALUE, oldMaximalValue);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#MinimumCreepRate
     */
     
    public Collection<? extends Object> getMinimumCreepRate() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MINIMUMCREEPRATE, Object.class);
    }

    public boolean hasMinimumCreepRate() {
		return !getMinimumCreepRate().isEmpty();
    }

    public void addMinimumCreepRate(Object newMinimumCreepRate) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MINIMUMCREEPRATE, newMinimumCreepRate);
    }

    public void removeMinimumCreepRate(Object oldMinimumCreepRate) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MINIMUMCREEPRATE, oldMinimumCreepRate);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#MinimumValue
     */
     
    public Collection<? extends Object> getMinimumValue() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MINIMUMVALUE, Object.class);
    }

    public boolean hasMinimumValue() {
		return !getMinimumValue().isEmpty();
    }

    public void addMinimumValue(Object newMinimumValue) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MINIMUMVALUE, newMinimumValue);
    }

    public void removeMinimumValue(Object oldMinimumValue) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MINIMUMVALUE, oldMinimumValue);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#ReductionOfArea
     */
     
    public Collection<? extends Object> getReductionOfArea() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_REDUCTIONOFAREA, Object.class);
    }

    public boolean hasReductionOfArea() {
		return !getReductionOfArea().isEmpty();
    }

    public void addReductionOfArea(Object newReductionOfArea) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_REDUCTIONOFAREA, newReductionOfArea);
    }

    public void removeReductionOfArea(Object oldReductionOfArea) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_REDUCTIONOFAREA, oldReductionOfArea);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#Strain
     */
     
    public Collection<? extends Object> getStrain() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAIN, Object.class);
    }

    public boolean hasStrain() {
		return !getStrain().isEmpty();
    }

    public void addStrain(Object newStrain) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAIN, newStrain);
    }

    public void removeStrain(Object oldStrain) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAIN, oldStrain);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#StrainAtOnsetOfTertiaryCteep
     */
     
    public Collection<? extends Object> getStrainAtOnsetOfTertiaryCteep() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAINATONSETOFTERTIARYCTEEP, Object.class);
    }

    public boolean hasStrainAtOnsetOfTertiaryCteep() {
		return !getStrainAtOnsetOfTertiaryCteep().isEmpty();
    }

    public void addStrainAtOnsetOfTertiaryCteep(Object newStrainAtOnsetOfTertiaryCteep) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAINATONSETOFTERTIARYCTEEP, newStrainAtOnsetOfTertiaryCteep);
    }

    public void removeStrainAtOnsetOfTertiaryCteep(Object oldStrainAtOnsetOfTertiaryCteep) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAINATONSETOFTERTIARYCTEEP, oldStrainAtOnsetOfTertiaryCteep);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#StrainRate
     */
     
    public Collection<? extends Object> getStrainRate() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAINRATE, Object.class);
    }

    public boolean hasStrainRate() {
		return !getStrainRate().isEmpty();
    }

    public void addStrainRate(Object newStrainRate) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAINRATE, newStrainRate);
    }

    public void removeStrainRate(Object oldStrainRate) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STRAINRATE, oldStrainRate);
    }


    /* ***************************************************
     * Data Property http://codata.jp/OML-Property.owl#Value
     */
     
    public Collection<? extends Object> getValue() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_VALUE, Object.class);
    }

    public boolean hasValue() {
		return !getValue().isEmpty();
    }

    public void addValue(Object newValue) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_VALUE, newValue);
    }

    public void removeValue(Object oldValue) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_VALUE, oldValue);
    }


    /* ***************************************************
     * Data Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#hasMaterialPropertyValue
     */
     
    public Collection<? extends Object> getHasMaterialPropertyValue() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMATERIALPROPERTYVALUE, Object.class);
    }

    public boolean hasHasMaterialPropertyValue() {
		return !getHasMaterialPropertyValue().isEmpty();
    }

    public void addHasMaterialPropertyValue(Object newHasMaterialPropertyValue) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMATERIALPROPERTYVALUE, newHasMaterialPropertyValue);
    }

    public void removeHasMaterialPropertyValue(Object oldHasMaterialPropertyValue) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMATERIALPROPERTYVALUE, oldHasMaterialPropertyValue);
    }


}
