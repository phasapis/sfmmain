package eu.sifem.model.owl.impl;

import eu.sifem.model.owl.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultInstantaneousEvent <br>
 * @version generated on Mon May 11 16:25:20 BST 2015 by jbjares
 */
public class DefaultInstantaneousEvent extends WrappedIndividualImpl implements InstantaneousEvent {

    public DefaultInstantaneousEvent(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://www.w3.org/ns/prov#atTime
     */
     
    public Collection<? extends Object> getAtTime() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTIME, Object.class);
    }

    public boolean hasAtTime() {
		return !getAtTime().isEmpty();
    }

    public void addAtTime(Object newAtTime) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTIME, newAtTime);
    }

    public void removeAtTime(Object oldAtTime) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTIME, oldAtTime);
    }


}
