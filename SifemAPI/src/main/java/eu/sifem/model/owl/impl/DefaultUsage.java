package eu.sifem.model.owl.impl;

import java.util.Collection;

import org.apache.commons.lang3.NotImplementedException;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.semanticweb.owlapi.model.IRI;

import eu.sifem.model.owl.Activity;
import eu.sifem.model.owl.Entity;
import eu.sifem.model.owl.Role;
import eu.sifem.model.owl.Usage;
import eu.sifem.model.owl.Vocabulary;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultUsage <br>
 * @version generated on Mon May 11 16:25:21 BST 2015 by jbjares
 */
public class DefaultUsage extends WrappedIndividualImpl implements Usage {
	
	private static final String THIS_METHOD_CAN_T_BE_CALLED_UNTIL_THIS_SIFEM_VERSION = "This method can't be called until this sifem version.";

    public DefaultUsage(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.w3.org/ns/prov#entity
     */
     
    public Collection<? extends Entity> getEntity() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ENTITY,
                                               DefaultEntity.class);
    }

    public boolean hasEntity() {
	   return !getEntity().isEmpty();
    }

    public void addEntity(Entity newEntity) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ENTITY,
                                       newEntity);
    }

    public void removeEntity(Entity oldEntity) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ENTITY,
                                          oldEntity);
    }


    /* ***************************************************
     * Object Property http://www.w3.org/ns/prov#hadActivity
     */
     
    public Collection<? extends Activity> getHadActivity() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HADACTIVITY,
                                               DefaultActivity.class);
    }

    public boolean hasHadActivity() {
	   return !getHadActivity().isEmpty();
    }

    public void addHadActivity(Activity newHadActivity) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HADACTIVITY,
                                       newHadActivity);
    }

    public void removeHadActivity(Activity oldHadActivity) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HADACTIVITY,
                                          oldHadActivity);
    }


    /* ***************************************************
     * Object Property http://www.w3.org/ns/prov#hadRole
     */
     
    public Collection<? extends Role> getHadRole() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HADROLE,
                                               DefaultRole.class);
    }

    public boolean hasHadRole() {
	   return !getHadRole().isEmpty();
    }

    public void addHadRole(Role newHadRole) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HADROLE,
                                       newHadRole);
    }

    public void removeHadRole(Role oldHadRole) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HADROLE,
                                          oldHadRole);
    }


    /* ***************************************************
     * Object Property http://www.w3.org/ns/prov#influencer
     */
     
    public Collection<? extends WrappedIndividual> getInfluencer() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_INFLUENCER,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasInfluencer() {
	   return !getInfluencer().isEmpty();
    }

    public void addInfluencer(WrappedIndividual newInfluencer) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_INFLUENCER,
                                       newInfluencer);
    }

    public void removeInfluencer(WrappedIndividual oldInfluencer) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_INFLUENCER,
                                          oldInfluencer);
    }





	@Override
	public Collection<? extends Object> getAtTime() {
		throw new NotImplementedException(THIS_METHOD_CAN_T_BE_CALLED_UNTIL_THIS_SIFEM_VERSION);
	}





	@Override
	public boolean hasAtTime() {
		throw new NotImplementedException(THIS_METHOD_CAN_T_BE_CALLED_UNTIL_THIS_SIFEM_VERSION);
	}





	@Override
	public void addAtTime(Object newAtTime) {
		throw new NotImplementedException(THIS_METHOD_CAN_T_BE_CALLED_UNTIL_THIS_SIFEM_VERSION);
	}





	@Override
	public void removeAtTime(Object oldAtTime) {
		throw new NotImplementedException(THIS_METHOD_CAN_T_BE_CALLED_UNTIL_THIS_SIFEM_VERSION);
	}


}
