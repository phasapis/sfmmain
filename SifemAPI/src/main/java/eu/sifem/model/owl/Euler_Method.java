package eu.sifem.model.owl;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Euler_Method <br>
 * @version generated on Mon May 11 16:25:20 BST 2015 by jbjares
 */

public interface Euler_Method extends Solver {

    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasArgumentFunctionPair
     */
     
    /**
     * Gets all property values for the hasArgumentFunctionPair property.<p>
     * 
     * @returns a collection of values for the hasArgumentFunctionPair property.
     */
    Collection<? extends ArgumentFunctionPair> getHasArgumentFunctionPair();

    /**
     * Checks if the class has a hasArgumentFunctionPair property value.<p>
     * 
     * @return true if there is a hasArgumentFunctionPair property value.
     */
    boolean hasHasArgumentFunctionPair();

    /**
     * Adds a hasArgumentFunctionPair property value.<p>
     * 
     * @param newHasArgumentFunctionPair the hasArgumentFunctionPair property value to be added
     */
    void addHasArgumentFunctionPair(ArgumentFunctionPair newHasArgumentFunctionPair);

    /**
     * Removes a hasArgumentFunctionPair property value.<p>
     * 
     * @param oldHasArgumentFunctionPair the hasArgumentFunctionPair property value to be removed.
     */
    void removeHasArgumentFunctionPair(ArgumentFunctionPair oldHasArgumentFunctionPair);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasSolverSettings
     */
     
    /**
     * Gets all property values for the hasSolverSettings property.<p>
     * 
     * @returns a collection of values for the hasSolverSettings property.
     */
    Collection<? extends SolverSettings> getHasSolverSettings();

    /**
     * Checks if the class has a hasSolverSettings property value.<p>
     * 
     * @return true if there is a hasSolverSettings property value.
     */
    boolean hasHasSolverSettings();

    /**
     * Adds a hasSolverSettings property value.<p>
     * 
     * @param newHasSolverSettings the hasSolverSettings property value to be added
     */
    void addHasSolverSettings(SolverSettings newHasSolverSettings);

    /**
     * Removes a hasSolverSettings property value.<p>
     * 
     * @param oldHasSolverSettings the hasSolverSettings property value to be removed.
     */
    void removeHasSolverSettings(SolverSettings oldHasSolverSettings);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#appliedSolverHasInput
     */
     
    /**
     * Gets all property values for the appliedSolverHasInput property.<p>
     * 
     * @returns a collection of values for the appliedSolverHasInput property.
     */
    Collection<? extends Physical_Attribute> getAppliedSolverHasInput();

    /**
     * Checks if the class has a appliedSolverHasInput property value.<p>
     * 
     * @return true if there is a appliedSolverHasInput property value.
     */
    boolean hasAppliedSolverHasInput();

    /**
     * Adds a appliedSolverHasInput property value.<p>
     * 
     * @param newAppliedSolverHasInput the appliedSolverHasInput property value to be added
     */
    void addAppliedSolverHasInput(Physical_Attribute newAppliedSolverHasInput);

    /**
     * Removes a appliedSolverHasInput property value.<p>
     * 
     * @param oldAppliedSolverHasInput the appliedSolverHasInput property value to be removed.
     */
    void removeAppliedSolverHasInput(Physical_Attribute oldAppliedSolverHasInput);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#hasInitialCondition
     */
     
    /**
     * Gets all property values for the hasInitialCondition property.<p>
     * 
     * @returns a collection of values for the hasInitialCondition property.
     */
    Collection<? extends Initial_Condition> getHasInitialCondition();

    /**
     * Checks if the class has a hasInitialCondition property value.<p>
     * 
     * @return true if there is a hasInitialCondition property value.
     */
    boolean hasHasInitialCondition();

    /**
     * Adds a hasInitialCondition property value.<p>
     * 
     * @param newHasInitialCondition the hasInitialCondition property value to be added
     */
    void addHasInitialCondition(Initial_Condition newHasInitialCondition);

    /**
     * Removes a hasInitialCondition property value.<p>
     * 
     * @param oldHasInitialCondition the hasInitialCondition property value to be removed.
     */
    void removeHasInitialCondition(Initial_Condition oldHasInitialCondition);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#isSolverOf
     */
     
    /**
     * Gets all property values for the isSolverOf property.<p>
     * 
     * @returns a collection of values for the isSolverOf property.
     */
    Collection<? extends WrappedIndividual> getIsSolverOf();

    /**
     * Checks if the class has a isSolverOf property value.<p>
     * 
     * @return true if there is a isSolverOf property value.
     */
    boolean hasIsSolverOf();

    /**
     * Adds a isSolverOf property value.<p>
     * 
     * @param newIsSolverOf the isSolverOf property value to be added
     */
    void addIsSolverOf(WrappedIndividual newIsSolverOf);

    /**
     * Removes a isSolverOf property value.<p>
     * 
     * @param oldIsSolverOf the isSolverOf property value to be removed.
     */
    void removeIsSolverOf(WrappedIndividual oldIsSolverOf);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FiniteElementModel.owl#usesMaterialProperty
     */
     
    /**
     * Gets all property values for the usesMaterialProperty property.<p>
     * 
     * @returns a collection of values for the usesMaterialProperty property.
     */
    Collection<? extends Material_Property> getUsesMaterialProperty();

    /**
     * Checks if the class has a usesMaterialProperty property value.<p>
     * 
     * @return true if there is a usesMaterialProperty property value.
     */
    boolean hasUsesMaterialProperty();

    /**
     * Adds a usesMaterialProperty property value.<p>
     * 
     * @param newUsesMaterialProperty the usesMaterialProperty property value to be added
     */
    void addUsesMaterialProperty(Material_Property newUsesMaterialProperty);

    /**
     * Removes a usesMaterialProperty property value.<p>
     * 
     * @param oldUsesMaterialProperty the usesMaterialProperty property value to be removed.
     */
    void removeUsesMaterialProperty(Material_Property oldUsesMaterialProperty);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
