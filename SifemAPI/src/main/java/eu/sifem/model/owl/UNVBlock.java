package eu.sifem.model.owl;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: UNVBlock <br>
 * @version generated on Mon May 11 16:25:19 BST 2015 by jbjares
 */

public interface UNVBlock extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#hasUNVBlockSettings
     */
     
    /**
     * Gets all property values for the hasUNVBlockSettings property.<p>
     * 
     * @returns a collection of values for the hasUNVBlockSettings property.
     */
    Collection<? extends UNVBlockSettings> getHasUNVBlockSettings();

    /**
     * Checks if the class has a hasUNVBlockSettings property value.<p>
     * 
     * @return true if there is a hasUNVBlockSettings property value.
     */
    boolean hasHasUNVBlockSettings();

    /**
     * Adds a hasUNVBlockSettings property value.<p>
     * 
     * @param newHasUNVBlockSettings the hasUNVBlockSettings property value to be added
     */
    void addHasUNVBlockSettings(UNVBlockSettings newHasUNVBlockSettings);

    /**
     * Removes a hasUNVBlockSettings property value.<p>
     * 
     * @param oldHasUNVBlockSettings the hasUNVBlockSettings property value to be removed.
     */
    void removeHasUNVBlockSettings(UNVBlockSettings oldHasUNVBlockSettings);


    /* ***************************************************
     * Property http://www.sifemontologies.com/ontologies/FEMSettingsPAK.owl#isUNVBlockOf
     */
     
    /**
     * Gets all property values for the isUNVBlockOf property.<p>
     * 
     * @returns a collection of values for the isUNVBlockOf property.
     */
    Collection<? extends UNVOutputFile> getIsUNVBlockOf();

    /**
     * Checks if the class has a isUNVBlockOf property value.<p>
     * 
     * @return true if there is a isUNVBlockOf property value.
     */
    boolean hasIsUNVBlockOf();

    /**
     * Adds a isUNVBlockOf property value.<p>
     * 
     * @param newIsUNVBlockOf the isUNVBlockOf property value to be added
     */
    void addIsUNVBlockOf(UNVOutputFile newIsUNVBlockOf);

    /**
     * Removes a isUNVBlockOf property value.<p>
     * 
     * @param oldIsUNVBlockOf the isUNVBlockOf property value to be removed.
     */
    void removeIsUNVBlockOf(UNVOutputFile oldIsUNVBlockOf);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
